{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Supatra-P/CN351-HTTP-Explorations/blob/main/CN351_W04_IndAssignment\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# CN351-W04-IndAssignment: HTTP Explorations Part2\n",
        "* *Instructors* \n",
        "  1. [Akkharawoot TAKHOM](https://www.nectec.or.th/hccru/staff/view/85) \n",
        "  2. Tharathon Utasri\n",
        "* *Email*: `takkhara@engr.tu.ac.th`\n",
        "* *Affiliation* : Department of Electrical and Computer Engineering, Faculty of Engineering, Thammasat University\n",
        "* *Revision Date* : Febuary-01-2023"
      ],
      "metadata": {
        "id": "0TZHKxymRetm"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "\n",
        "> **Acknowledgement:**\n",
        "  * Practical Statistics - 1 (Descriptive Statistics)\n",
        "  *LINK: https://www.kaggle.com/code/yashvi/practical-statistics-1-descriptive-statistics\n",
        "  * Dataset NYC Property Sales\n",
        "  *Link https://www.kaggle.com/datasets/new-york-city/nyc-property-sales\n",
        "\n",
        "> **References:**\n",
        "* Socket : https://docs.python.org/3/library/socket.html\n",
        "* HTTP : https://fr.wikipedia.org/wiki/Hypertext_Transfer_Protocol\n",
        "\n",
        "> <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\"><img alt=\"Creative Commons License\" style=\"border-width:0\" src=\"https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png\" /></a><br />This work is licensed under a <a rel=\"license\" href=\"http://creativecommons.org/licenses/by-nc-sa/4.0/\">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.\n",
        "\n",
        "---"
      ],
      "metadata": {
        "id": "wTPGHibhTJyl"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#Examples of HTTP Reqeust Methods"
      ],
      "metadata": {
        "id": "FubJSTONjTgI"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## 1) HTTP Request: Netcat on UNIX\n",
        "ใช้ netcat บน UNIX"
      ],
      "metadata": {
        "id": "J3A_el7Ujbdz"
      }
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f-NP2RX_KYqk"
      },
      "source": [
        "#### 1.1) Netcat Installation\n",
        "ติดตั้งเครื่องมือ netcat เพื่อใช้ รับ-ส่ง Request-Response\n"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "* netcat: https://docs.oracle.com/cd/E86824_01/html/E54763/netcat-1.html\n",
        "* nmap https://nmap.org/book/man.html\n",
        "* ncat https://man7.org/linux/man-pages/man1/ncat.1.html"
      ],
      "metadata": {
        "id": "fVFAfradM6lK"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bvmBkESn90WR",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "abd086c5-8d2e-41a9-e814-96c739e995a3"
      },
      "source": [
        "! apt-get -q -y install netcat -openbsd #install netcat\n",
        "! apt-get -q -y install nmap #install nmap    \n",
        "! apt-get -q -y install ncat #install ncat"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "E: Option -openbsd: Configuration item specification must have an =<val>.\n",
            "Reading package lists...\n",
            "Building dependency tree...\n",
            "Reading state information...\n",
            "The following package was automatically installed and is no longer required:\n",
            "  libnvidia-common-510\n",
            "Use 'apt autoremove' to remove it.\n",
            "The following additional packages will be installed:\n",
            "  liblinear4 liblua5.3-0 libpcap0.8 lua-lpeg nmap-common\n",
            "Suggested packages:\n",
            "  liblinear-tools liblinear-dev ncat ndiff zenmap\n",
            "The following NEW packages will be installed:\n",
            "  liblinear4 liblua5.3-0 libpcap0.8 lua-lpeg nmap nmap-common\n",
            "0 upgraded, 6 newly installed, 0 to remove and 27 not upgraded.\n",
            "Need to get 5,656 kB of archives.\n",
            "After this operation, 26.7 MB of additional disk space will be used.\n",
            "Get:1 http://archive.ubuntu.com/ubuntu focal/main amd64 libpcap0.8 amd64 1.9.1-3 [128 kB]\n",
            "Get:2 http://archive.ubuntu.com/ubuntu focal/universe amd64 liblinear4 amd64 2.3.0+dfsg-3build1 [41.7 kB]\n",
            "Get:3 http://archive.ubuntu.com/ubuntu focal/main amd64 liblua5.3-0 amd64 5.3.3-1.1ubuntu2 [116 kB]\n",
            "Get:4 http://archive.ubuntu.com/ubuntu focal/universe amd64 lua-lpeg amd64 1.0.2-1 [31.4 kB]\n",
            "Get:5 http://archive.ubuntu.com/ubuntu focal/universe amd64 nmap-common all 7.80+dfsg1-2build1 [3,676 kB]\n",
            "Get:6 http://archive.ubuntu.com/ubuntu focal/universe amd64 nmap amd64 7.80+dfsg1-2build1 [1,662 kB]\n",
            "Fetched 5,656 kB in 1s (10.5 MB/s)\n",
            "Selecting previously unselected package libpcap0.8:amd64.\n",
            "(Reading database ... 129496 files and directories currently installed.)\n",
            "Preparing to unpack .../0-libpcap0.8_1.9.1-3_amd64.deb ...\n",
            "Unpacking libpcap0.8:amd64 (1.9.1-3) ...\n",
            "Selecting previously unselected package liblinear4:amd64.\n",
            "Preparing to unpack .../1-liblinear4_2.3.0+dfsg-3build1_amd64.deb ...\n",
            "Unpacking liblinear4:amd64 (2.3.0+dfsg-3build1) ...\n",
            "Selecting previously unselected package liblua5.3-0:amd64.\n",
            "Preparing to unpack .../2-liblua5.3-0_5.3.3-1.1ubuntu2_amd64.deb ...\n",
            "Unpacking liblua5.3-0:amd64 (5.3.3-1.1ubuntu2) ...\n",
            "Selecting previously unselected package lua-lpeg:amd64.\n",
            "Preparing to unpack .../3-lua-lpeg_1.0.2-1_amd64.deb ...\n",
            "Unpacking lua-lpeg:amd64 (1.0.2-1) ...\n",
            "Selecting previously unselected package nmap-common.\n",
            "Preparing to unpack .../4-nmap-common_7.80+dfsg1-2build1_all.deb ...\n",
            "Unpacking nmap-common (7.80+dfsg1-2build1) ...\n",
            "Selecting previously unselected package nmap.\n",
            "Preparing to unpack .../5-nmap_7.80+dfsg1-2build1_amd64.deb ...\n",
            "Unpacking nmap (7.80+dfsg1-2build1) ...\n",
            "Setting up lua-lpeg:amd64 (1.0.2-1) ...\n",
            "Setting up liblinear4:amd64 (2.3.0+dfsg-3build1) ...\n",
            "Setting up libpcap0.8:amd64 (1.9.1-3) ...\n",
            "Setting up nmap-common (7.80+dfsg1-2build1) ...\n",
            "Setting up liblua5.3-0:amd64 (5.3.3-1.1ubuntu2) ...\n",
            "Setting up nmap (7.80+dfsg1-2build1) ...\n",
            "Processing triggers for man-db (2.9.1-1) ...\n",
            "Processing triggers for libc-bin (2.31-0ubuntu9.9) ...\n",
            "Reading package lists...\n",
            "Building dependency tree...\n",
            "Reading state information...\n",
            "The following package was automatically installed and is no longer required:\n",
            "  libnvidia-common-510\n",
            "Use 'apt autoremove' to remove it.\n",
            "The following NEW packages will be installed:\n",
            "  ncat\n",
            "0 upgraded, 1 newly installed, 0 to remove and 27 not upgraded.\n",
            "Need to get 107 kB of archives.\n",
            "After this operation, 289 kB of additional disk space will be used.\n",
            "Get:1 http://archive.ubuntu.com/ubuntu focal/universe amd64 ncat amd64 7.80+dfsg1-2build1 [107 kB]\n",
            "Fetched 107 kB in 0s (637 kB/s)\n",
            "Selecting previously unselected package ncat.\n",
            "(Reading database ... 130386 files and directories currently installed.)\n",
            "Preparing to unpack .../ncat_7.80+dfsg1-2build1_amd64.deb ...\n",
            "Unpacking ncat (7.80+dfsg1-2build1) ...\n",
            "Setting up ncat (7.80+dfsg1-2build1) ...\n",
            "update-alternatives: using /usr/bin/ncat to provide /bin/nc (nc) in auto mode\n",
            "Processing triggers for man-db (2.9.1-1) ...\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "9zoUwKzYuOTG"
      },
      "source": [
        "#### 1.2) Netcat GET Request Example\n",
        "ทดลองการส่ง GET Request ด้วย netcat"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "* ส่ง HTTP/1.1 GET\n",
        "* Location /\n",
        "* Host cn351.cdoam.org\n",
        "* HTTP Port 80"
      ],
      "metadata": {
        "id": "dEBl87r6NTXN"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "https://linux.die.net/man/1/echo\n",
        "```\n",
        "echo \n",
        "    -e\n",
        "    enable interpretation of backslash escapes\n",
        "    \n",
        "    -n\n",
        "    do not output the trailing newline \n",
        "```\n",
        "\n"
      ],
      "metadata": {
        "id": "hA2gLuFfSFKM"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gLz7M20LKd0q",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "549e50e0-2cb3-4db3-cf8e-b85c868daebb"
      },
      "source": [
        "! echo -ne \"GET / HTTP/1.1\\r\\nHost: cn351.cdoam.org\\r\\n\\r\\n\" | ncat --no-shutdown -i 1s cn351.cdoam.org 80"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "HTTP/1.1 200 OK\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 11:46:52 GMT\r\n",
            "Content-Type: text/html; charset=utf-8\r\n",
            "Content-Length: 45\r\n",
            "Connection: keep-alive\r\n",
            "X-Powered-By: Express\r\n",
            "Access-Control-Allow-Origin: *\r\n",
            "ETag: W/\"2d-lk1i+/JOZDVdVww51EZ9+VRlBHk\"\r\n",
            "\r\n",
            "Server-side of CN351 Web Application SecurityNcat: Idle timeout expired (1000 ms).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 1.3) Netcat GET Request on HTTPS without SSL\n",
        "ทดลองส่ง GET Request แบบ HTTPS ไม่มี ssl ผ่าน netcat"
      ],
      "metadata": {
        "id": "ARpg2LJEZSi3"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "* ส่ง HTTP/1.1 GET\n",
        "* Location /\n",
        "* Host cn351.cdoam.org\n",
        "* HTTPS Port 443"
      ],
      "metadata": {
        "id": "3uZfQYU_NikG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "! echo -ne \"GET / HTTP/1.1\\r\\nHost: cn351.cdoam.org\\r\\n\\r\\n\" | ncat --no-shutdown -i 1s cn351.cdoam.org 443"
      ],
      "metadata": {
        "id": "HpDU5kU9ZOwc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e61673cc-9038-44d8-d358-0bc51b5691b8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "HTTP/1.1 400 Bad Request\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 11:47:19 GMT\r\n",
            "Content-Type: text/html\r\n",
            "Content-Length: 255\r\n",
            "Connection: close\r\n",
            "\r\n",
            "<html>\r\n",
            "<head><title>400 The plain HTTP request was sent to HTTPS port</title></head>\r\n",
            "<body>\r\n",
            "<center><h1>400 Bad Request</h1></center>\r\n",
            "<center>The plain HTTP request was sent to HTTPS port</center>\r\n",
            "<hr><center>nginx/1.18.0</center>\r\n",
            "</body>\r\n",
            "</html>\r\n",
            "Ncat: Idle timeout expired (1000 ms).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 1.4) Netcat GET Request on HTTPS with SSL\n",
        "ทดลองส่ง GET Request แบบ HTTPS และมี ssl ผ่าน netcat"
      ],
      "metadata": {
        "id": "gfcgyXXYFFr0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "* ส่ง HTTP/1.1 GET\n",
        "* Location /\n",
        "* Host cn351.cdoam.org\n",
        "* HTTPS Port 443"
      ],
      "metadata": {
        "id": "17jABeKBNlSh"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "\n",
        "```\n",
        "ncat\n",
        "    --no-shutdown\n",
        "      not terminated connection after send request(wait for response)\n",
        "\n",
        "    -i [time (s=second) (ms=milisecond)]\n",
        "\n",
        "    --ssl\n",
        "      Send request with SSL\n",
        "```\n",
        "\n"
      ],
      "metadata": {
        "id": "gr-GgSlPSsJs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "! echo -e \"GET / HTTP/1.1\\r\\nHost: cn351.cdoam.org\\r\\n\\r\\n\" | ncat --no-shutdown -i 1s --ssl cn351.cdoam.org 443"
      ],
      "metadata": {
        "id": "98an7kG-FEjW",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "93ba10f1-7c68-4ae7-8597-0e8f8db6e55e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "HTTP/1.1 200 OK\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 11:49:13 GMT\r\n",
            "Content-Type: text/html; charset=utf-8\r\n",
            "Content-Length: 45\r\n",
            "Connection: keep-alive\r\n",
            "X-Powered-By: Express\r\n",
            "Access-Control-Allow-Origin: *\r\n",
            "ETag: W/\"2d-lk1i+/JOZDVdVww51EZ9+VRlBHk\"\r\n",
            "\r\n",
            "Server-side of CN351 Web Application SecurityNcat: Idle timeout expired (1000 ms).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##2) Python Review: String-Bytes Conversion using b\n",
        "การแปลง String เป็น bytes ใน Python ด้วยการใช้ b"
      ],
      "metadata": {
        "id": "qFjRTctN9LA-"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "* เฉพาะ ascii \n",
        "* การเข้ารหัสด้วย b ไม่สามารถเข้ารหัสภาษาไทยได้"
      ],
      "metadata": {
        "id": "L3i01GL6Nqxa"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "f3nB9cxczlfw",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "250243c6-fe70-4013-d7e4-6a53eed1f441"
      },
      "source": [
        "s0 = \"CN351\"          # str object       \n",
        "b0 = b\"CN351\"         # bytearray\n",
        "b1 = s0.encode()        # convert str to bytearray\n",
        "s1 = b0.decode()        # convert bytearray to str (utf-8 encoding)\n",
        "print(\"s0 =\", s1)\n",
        "print(\"b0 =\", b1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "s0 = CN351\n",
            "b0 = b'CN351'\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "paXamFSN2R6A",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "05ec6484-dae0-48bd-da3a-0aa266390791"
      },
      "source": [
        "\"Hello, my name is {}!\".format(s1)"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Hello, my name is CN351!'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##3) Python Review: String-Bytes Conversion using bytes()\n",
        "การแปลง String เป็น bytes ใน Python ด้วยการใช้ bytes()"
      ],
      "metadata": {
        "id": "Pa_e1H2b9TBg"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "* เข้ารหัสเป็นภาษาไทยได้ด้วย utf-8"
      ],
      "metadata": {
        "id": "ZiLPCm9kNx0v"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "s0 = \"ซีเอ็น 351\"        # str object       \n",
        "b0 = bytes(\"ซีเอ็น351\", encoding=\"utf-8\")      # bytearray\n",
        "b1 = s0.encode()       # convert str to bytearray\n",
        "s1 = b0.decode()       # convert bytearray to str (utf-8 encoding)\n",
        "print(\"s0 =\", s1)\n",
        "print(\"b0 =\", b1)"
      ],
      "metadata": {
        "id": "2TcZ9IAt9ZmF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0d1e1b87-5ed3-40bb-d2ef-4554fae278a6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "s0 = ซีเอ็น351\n",
            "b0 = b'\\xe0\\xb8\\x8b\\xe0\\xb8\\xb5\\xe0\\xb9\\x80\\xe0\\xb8\\xad\\xe0\\xb9\\x87\\xe0\\xb8\\x99 351'\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\"Hello, my name is {}!\".format(s1)"
      ],
      "metadata": {
        "id": "JQFJ2EHd9oDp",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "9933823b-4f8e-4c8c-db61-af196a328faa"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'Hello, my name is ซีเอ็น351!'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 8
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "sSuzU2jjHU7T"
      },
      "source": [
        "## 4) HTTP Request: Python3 Socket\n",
        "\n",
        "* https://docs.python.org/3/howto/sockets.html\n",
        "* https://docs.python.org/3/library/socket.html\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "d07gOqPUHZMe"
      },
      "source": [
        "import socket"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "ตั้งค่า Socket สำหรับส่ง HTTP Request\n",
        "* TCP/IP Socket https://www.ibm.com/docs/en/zvse/6.2?topic=SSB27H_6.2.0/fa2ti_what_is_socket_connection.htm"
      ],
      "metadata": {
        "id": "VxcPJdelbyuE"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Lx68gLpO1XnL",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0a34b93e-c60c-4e72-cb88-075ee299ff8e"
      },
      "source": [
        "HOST = b'cn351.cdoam.org'\n",
        "PORT = 80\n",
        "\n",
        "#กำหนดค่าการเชื่อมต่อ socket(socket_family, socket_kind)\n",
        "s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n",
        "s.connect((HOST, PORT))\n",
        "\n",
        "#Request Line\n",
        "request = b'GET / HTTP/1.1\\r\\n'\n",
        "request += b'Host: ' + HOST + b\"\\r\\n\"\n",
        "request += b'Connection: close\\r\\n'\n",
        "request += b'\\r\\n'\n",
        "\n",
        "#แสดง Request line ที่จะส่งไป\n",
        "print(request.decode())"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "GET / HTTP/1.1\r\n",
            "Host: cn351.cdoam.org\r\n",
            "Connection: close\r\n",
            "\r\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "ส่ง HTTP GET Request"
      ],
      "metadata": {
        "id": "ZYHfWl3AbwJl"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Network Buffer Size: https://www.ibm.com/docs/en/was-zos/8.5.5?topic=SS7K4U_8.5.5/com.ibm.websphere.nd.multiplatform.doc/ae/tprf_tunetcpip.htm"
      ],
      "metadata": {
        "id": "G6fDUhfJVlOf"
      }
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "rrXKnPi-9NuV",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ea7d61e7-2626-4970-b0a6-6a05e9d46149"
      },
      "source": [
        "#ส่ง Request line ไปที่ Server\n",
        "s.sendall(request)\n",
        "\n",
        "#รับ Response จาก Server โดยตั้ง Buffer ไว้ที่  1024 Bytes (1 KBs)\n",
        "answer = s.recv(1024)\n",
        "\n",
        "#แสดงผล Response\n",
        "print(answer.decode())\n",
        "\n",
        "#ปิดการเชื่อมต่อ\n",
        "s.close()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "HTTP/1.1 200 OK\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 12:29:57 GMT\r\n",
            "Content-Type: text/html; charset=utf-8\r\n",
            "Content-Length: 45\r\n",
            "Connection: close\r\n",
            "X-Powered-By: Express\r\n",
            "Access-Control-Allow-Origin: *\r\n",
            "ETag: W/\"2d-lk1i+/JOZDVdVww51EZ9+VRlBHk\"\r\n",
            "\r\n",
            "Server-side of CN351 Web Application Security\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 4.1) HTTP GET Request on HTTPS without SSL using Python Socket\n",
        "การส่ง HTTP GET Request บน HTTPS โดยไม่มี SSL ผ่าน Python socket"
      ],
      "metadata": {
        "id": "5t8mXgcZb4iC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "HOST = b'cn351.cdoam.org'\n",
        "PORT = 443\n",
        "\n",
        "s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n",
        "s.connect((HOST, PORT))\n",
        "\n",
        "request = b'GET / HTTP/1.1\\r\\n'\n",
        "request += b'Host: ' + HOST + b'\\r\\n'\n",
        "request += b'Connection: close\\r\\n'\n",
        "request += b'\\r\\n'\n",
        "\n",
        "print(request.decode())\n",
        "\n",
        "s.sendall(request)\n",
        "answer = s.recv(1024)\n",
        "print(answer.decode())\n",
        "\n",
        "s.close()"
      ],
      "metadata": {
        "id": "NUbkeOTAanh2",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0e877560-6f80-49f1-c5ef-5ee62110a34b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "GET / HTTP/1.1\r\n",
            "Host: cn351.cdoam.org\r\n",
            "Connection: close\r\n",
            "\r\n",
            "\n",
            "HTTP/1.1 400 Bad Request\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 12:35:17 GMT\r\n",
            "Content-Type: text/html\r\n",
            "Content-Length: 255\r\n",
            "Connection: close\r\n",
            "\r\n",
            "<html>\r\n",
            "<head><title>400 The plain HTTP request was sent to HTTPS port</title></head>\r\n",
            "<body>\r\n",
            "<center><h1>400 Bad Request</h1></center>\r\n",
            "<center>The plain HTTP request was sent to HTTPS port</center>\r\n",
            "<hr><center>nginx/1.18.0</center>\r\n",
            "</body>\r\n",
            "</html>\r\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 4.2) HTTP GET Request on HTTPS with SSL using Python Socket\n",
        "การส่ง HTTP GET Request บน HTTPS โดยมี SSL ผ่าน Python socket"
      ],
      "metadata": {
        "id": "B1yV_XaLcI9m"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "HOST = b'cn351.cdoam.org'\n",
        "PORT = 443\n",
        "\n",
        "s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n",
        "\n",
        "#Encoding request with SSL to send in HTTPS\n",
        "import ssl\n",
        "wrapped_s = ssl.wrap_socket(\n",
        "    s, \n",
        "    ssl_version = ssl.PROTOCOL_TLSv1_2\n",
        "  )\n",
        "\n",
        "wrapped_s.connect((HOST, PORT))\n",
        "\n",
        "request = b'GET / HTTP/1.1\\r\\n'\n",
        "request += b'Host: ' + HOST + b'\\r\\n'\n",
        "request += b'Connection: close\\r\\n'\n",
        "request += b'\\r\\n'\n",
        "\n",
        "print(request.decode())\n",
        "\n",
        "wrapped_s.sendall(request)\n",
        "answer = wrapped_s.recv(1024)\n",
        "print(answer.decode())\n",
        "\n",
        "wrapped_s.close()"
      ],
      "metadata": {
        "id": "jF2WU1Zuaqix",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "ee064f98-00bf-4354-a2e2-6a892320f7c4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "GET / HTTP/1.1\r\n",
            "Host: cn351.cdoam.org\r\n",
            "Connection: close\r\n",
            "\r\n",
            "\n",
            "HTTP/1.1 200 OK\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 12:36:21 GMT\r\n",
            "Content-Type: text/html; charset=utf-8\r\n",
            "Content-Length: 45\r\n",
            "Connection: close\r\n",
            "X-Powered-By: Express\r\n",
            "Access-Control-Allow-Origin: *\r\n",
            "ETag: W/\"2d-lk1i+/JOZDVdVww51EZ9+VRlBHk\"\r\n",
            "\r\n",
            "Server-side of CN351 Web Application Security\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "---\n",
        "#Individual Assignment W04 (`14 points`)\n",
        "#! `ทุกคำตอบมีการประมวลผลจาก Server`\n",
        "#! `หากพบการคัดลอกคำตอบ จะปรับให้คะแนนเป็น 0`\n"
      ],
      "metadata": {
        "id": "oaC3jPHHjK_k"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "###1) ให้นักศึกษาทำการส่ง HTTP GET (`2 points`) \n",
        "โดยใช้ netcat ตามรายละเอียดดังต่อไปนี้ \n",
        "\n",
        "  *   ให้นักศึกษาทำการส่ง HTTP GET Request ไปที่ cn351.cdoam.org โดยใช้รูปแบบ HTTP ที่ port 80\n",
        "  *   ให้ทำการระบุ location ไปที่ /api/w4/get\n",
        "  *   เพิ่ม Header ชื่อ User-Agent โดยมีค่าว่า \"Colab {ชื่อภาษาอังกฤษของนักศึกษา}\"\n"
      ],
      "metadata": {
        "id": "74s2_nzfjqwx"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "! echo -ne \"GET /api/w4/get HTTP/1.1\\r\\nHost: cn351.cdoam.org\\r\\nUser-Agent: Colab{Supatra}\\r\\n\\r\\n\" | ncat --no-shutdown -i 1s cn351.cdoam.org 80"
      ],
      "metadata": {
        "id": "qoFEZ4WZk7lb",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0b9267a5-3637-46b6-c279-b597ee2ff3a9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "HTTP/1.1 200 OK\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 12:37:49 GMT\r\n",
            "Content-Type: text/html; charset=utf-8\r\n",
            "Content-Length: 57\r\n",
            "Connection: keep-alive\r\n",
            "X-Powered-By: Express\r\n",
            "Access-Control-Allow-Origin: *\r\n",
            "ETag: W/\"39-f43+QArtqzzXWYRGkqpWnFvr84I\"\r\n",
            "\r\n",
            "Hello Student Your request send from Colab{Supatra} !\r\n",
            "\r\n",
            "Ncat: Idle timeout expired (1000 ms).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###2) ให้นักศึกษาทำการส่ง HTTP GET โดยใช้ Python Socket (`2 points`) \n",
        "ตามรายละเอียดดังต่อไปนี้\n",
        "  *   ให้นักศึกษาทำการส่ง HTTP GET Request ไปที่ cn351.cdoam.org โดยใช้รูปแบบ HTTP ที่ Port 80\n",
        "  *   ให้ทำการระบุ location ไปที่ /api/w4/get\n",
        "  *   เพิ่ม Header ชื่อ User-Agent โดยมีค่าว่า \"Colab {ชื่อภาษาอังกฤษของนักศึกษา}\""
      ],
      "metadata": {
        "id": "eYTaOYIX5bOV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "HOST = b'cn351.cdoam.org'\n",
        "PORT = 80\n",
        "\n",
        "s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n",
        "s.connect((HOST, PORT))\n",
        "\n",
        "request = b'GET /api/w4/get HTTP/1.1\\r\\n'\n",
        "request += b'Host: ' + HOST + b\"\\r\\n\"\n",
        "request += b'User-Agent: '+ b\"Colab{Supatra}\" + b\"\\r\\n\"\n",
        "request += b'Connection: Close\\r\\n'\n",
        "request += b'\\r\\n'\n",
        "\n",
        "print(request.decode())\n",
        "\n",
        "s.sendall(request)\n",
        "\n",
        "answer = s.recv(1024)\n",
        "\n",
        "print(answer.decode())\n",
        "\n",
        "s.close()"
      ],
      "metadata": {
        "id": "yMCa67ar5foF",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c8507695-e73b-496d-cd07-2ad6671f9646"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "GET /api/w4/get HTTP/1.1\r\n",
            "Host: cn351.cdoam.org\r\n",
            "User-Agent: Colab{Supatra}\r\n",
            "Connection: Close\r\n",
            "\r\n",
            "\n",
            "HTTP/1.1 200 OK\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 12:38:57 GMT\r\n",
            "Content-Type: text/html; charset=utf-8\r\n",
            "Content-Length: 57\r\n",
            "Connection: close\r\n",
            "X-Powered-By: Express\r\n",
            "Access-Control-Allow-Origin: *\r\n",
            "ETag: W/\"39-f43+QArtqzzXWYRGkqpWnFvr84I\"\r\n",
            "\r\n",
            "Hello Student Your request send from Colab{Supatra} !\r\n",
            "\r\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###3) ให้นักศึกษาทำการส่ง HTTP POST (`2 points`)\n",
        "โดยใช้ Python Socket ตามรายละเอียดดังต่อไปนี้\n",
        "\n",
        "  *   ให้นักศึกษาทำการส่ง HTTP POST Request ไปที่ cn351.cdoam.org\n",
        "  *   ให้ทำการระบุ location ไปที่ /api/w4/post\n",
        "  *   เพิ่ม Header ชื่อ User-Agent โดยมีค่าว่า \"Colab {ชื่อภาษาอังกฤษของนักศึกษา}\"\n",
        "  *   เพิ่ม Header Content-Type โดยระบุเป็น text/plain\n",
        "  *   ทำการใส่ Body เป็น text คำว่า \"สวัสดี Server, ฉันชื่อ {ชื่อ-นามสกุลภาษาอังกฤษของนักศึกษา}\"\n",
        "  *   *นักศึกษาต้องทำการใส่ Header Content-Length ให้ request ด้วยโดยค่าของ Content-Length คือจำนวน byte ของ body ที่นักศึกษาส่งไปกับ request "
      ],
      "metadata": {
        "id": "chzBcklruP72"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "HOST = b'cn351.cdoam.org'\n",
        "PORT = 80\n",
        "\n",
        "s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n",
        "s.connect((HOST, PORT))\n",
        "\n",
        "body = \"สวัสดี Server, ฉันชื่อ Supatra Pinjinda\"\n",
        "bodyEncode = body.encode('utf-8')\n",
        "bodyLen = len(bodyEncode)\n",
        "bodyLenEn = str(bodyLen).encode()\n",
        "\n",
        "request = b'POST /api/w4/post HTTP/1.1\\r\\n'\n",
        "request += b'Host: ' + HOST + b\"\\r\\n\"\n",
        "request += b'User-Agent: '+ b\"Colab{Supatra}\" + b\"\\r\\n\"\n",
        "request += b'Content-Type: '+ b'text/plain; charset=utf-8' + b\"\\r\\n\"\n",
        "request += b'Content-Length: '+ bodyLenEn + b\"\\r\\n\"\n",
        "request += b'Connection: Close\\r\\n\\r\\n'\n",
        "request += bodyEncode + b\"\\r\\n\"\n",
        "request += b'\\r\\n'\n",
        "\n",
        "print(request.decode())\n",
        "\n",
        "#ส่ง Request line ไปที่ Server\n",
        "s.sendall(request)\n",
        "\n",
        "#รับ Response จาก Server โดยตั้ง Buffer ไว้ที่  1024 Bytes (1 KBs)\n",
        "answer = s.recv(1024)\n",
        "\n",
        "#แสดงผล Response\n",
        "print(answer.decode())\n",
        "\n",
        "#ปิดการเชื่อมต่อ\n",
        "s.close()"
      ],
      "metadata": {
        "id": "h8tT9l3ntwwL",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "8da850ae-b70b-4877-f6fd-b9f6c5934e7c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "POST /api/w4/post HTTP/1.1\r\n",
            "Host: cn351.cdoam.org\r\n",
            "User-Agent: Colab{Supatra}\r\n",
            "Content-Type: text/plain; charset=utf-8\r\n",
            "Content-Length: 65\r\n",
            "Connection: Close\r\n",
            "\r\n",
            "สวัสดี Server, ฉันชื่อ Supatra Pinjinda\r\n",
            "\r\n",
            "\n",
            "HTTP/1.1 200 OK\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 13:17:08 GMT\r\n",
            "Content-Type: text/html; charset=utf-8\r\n",
            "Content-Length: 159\r\n",
            "Connection: close\r\n",
            "X-Powered-By: Express\r\n",
            "Access-Control-Allow-Origin: *\r\n",
            "ETag: W/\"9f-0yLFsyNPuZ6jGjTCF4ksSpZN8OA\"\r\n",
            "\r\n",
            "You send POST Request!\n",
            "Server:Hello Student Your request send from Colab{Supatra} !\r\n",
            "Student:สวัสดี Server, ฉันชื่อ Supatra Pinjinda\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###4) ให้นักศึกษาทำการส่ง HTTP PUT โดยใช้ Python Socket (`2 points`)\n",
        "ตามรายละเอียดดังต่อไปนี้\n",
        "\n",
        "  *   ให้นักศึกษาทำการส่ง HTTP PUT Request ไปที่ cn351.cdoam.org\n",
        "  *   ให้ทำการระบุ location ไปที่ /api/w4/put\n",
        "  *   เพิ่ม Header ชื่อ User-Agent โดยมีค่าว่า \"Colab {ชื่อภาษาอังกฤษของนักศึกษา}\"\n",
        "  *   เพิ่ม Header Content-Type โดยระบุเป็น text/plain\n",
        "  *   ทำการใส่ Body เป็น text คำว่า \"สวัสดี Server, ฉันชื่อ {ชื่อ-นามสกุลภาษาอังกฤษของนักศึกษา}\"\n",
        "  *   *นักศึกษาต้องทำการใส่ Header Content-Length ให้ request ด้วยโดยค่าของ Content-Length คือจำนวน byte ของ body ที่นักศึกษาส่งไปกับ request "
      ],
      "metadata": {
        "id": "0jH8yLNw_uDO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "HOST = b'cn351.cdoam.org'\n",
        "PORT = 80\n",
        "\n",
        "s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n",
        "s.connect((HOST, PORT))\n",
        "\n",
        "body = \"สวัสดี Server, ฉันชื่อ Supatra Pinjinda\"\n",
        "bodyEncode = body.encode('utf-8')\n",
        "bodyLen = len(bodyEncode)\n",
        "bodyLenEn = str(bodyLen).encode()\n",
        "\n",
        "request = b'PUT /api/w4/put HTTP/1.1\\r\\n'\n",
        "request += b'Host: ' + HOST + b\"\\r\\n\"\n",
        "request += b'User-Agent: '+ b\"Colab{Supatra}\" + b\"\\r\\n\"\n",
        "request += b'Content-Type: '+ b'text/plain; charset=utf-8' + b\"\\r\\n\"\n",
        "request += b'Content-Length: '+ bodyLenEn + b\"\\r\\n\"\n",
        "request += b'Connection: close\\r\\n\\r\\n'\n",
        "request += bodyEncode + b\"\\r\\n\"\n",
        "request += b'\\r\\n'\n",
        "\n",
        "print(request.decode())\n",
        "\n",
        "#ส่ง Request line ไปที่ Server\n",
        "s.sendall(request)\n",
        "\n",
        "#รับ Response จาก Server โดยตั้ง Buffer ไว้ที่  1024 Bytes (1 KBs)\n",
        "answer = s.recv(1024)\n",
        "\n",
        "#แสดงผล Response\n",
        "print(answer.decode())\n",
        "\n",
        "#ปิดการเชื่อมต่อ\n",
        "s.close()"
      ],
      "metadata": {
        "id": "55rRnxKZBE8a",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "6071db5a-ff90-4b21-e4b5-ac42c1d49814"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "PUT /api/w4/put HTTP/1.1\r\n",
            "Host: cn351.cdoam.org\r\n",
            "User-Agent: Colab{Supatra}\r\n",
            "Content-Type: text/plain; charset=utf-8\r\n",
            "Content-Length: 65\r\n",
            "Connection: close\r\n",
            "\r\n",
            "สวัสดี Server, ฉันชื่อ Supatra Pinjinda\r\n",
            "\r\n",
            "\n",
            "HTTP/1.1 201 Created\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 13:32:18 GMT\r\n",
            "Content-Type: text/html; charset=utf-8\r\n",
            "Content-Length: 158\r\n",
            "Connection: close\r\n",
            "X-Powered-By: Express\r\n",
            "Access-Control-Allow-Origin: *\r\n",
            "ETag: W/\"9e-T8Uq+Ynz3t6lqT+BuAeWeXHg8I0\"\r\n",
            "\r\n",
            "You send PUT Request!\n",
            "Server:Hello Student Your request send from Colab{Supatra} !\r\n",
            "Student:สวัสดี Server, ฉันชื่อ Supatra Pinjinda\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###5) ให้นักศึกษาทำการส่ง HTTP PATCH (`2 points`) \n",
        "โดยใช้ Python Socket ตามรายละเอียดดังต่อไปนี้\n",
        "\n",
        "  *   ให้นักศึกษาทำการส่ง HTTP PATCH Request ไปที่ cn351.cdoam.org\n",
        "  *   ให้ทำการระบุ location ไปที่ /api/w4/patch\n",
        "  *   เพิ่ม Header ชื่อ User-Agent โดยมีค่าว่า \"Colab {ชื่อภาษาอังกฤษของนักศึกษา}\"\n",
        "  *   เพิ่ม Header Content-Type โดยระบุเป็น text/plain\n",
        "  *   ไม่ต้องทำการใส่ Body"
      ],
      "metadata": {
        "id": "n_jRHEILDDO9"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "HOST = b'cn351.cdoam.org'\n",
        "PORT = 80\n",
        "\n",
        "s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n",
        "s.connect((HOST, PORT))\n",
        "\n",
        "\n",
        "request = b'PATCH /api/w4/patch HTTP/1.1\\r\\n'\n",
        "request += b'Host: ' + HOST + b\"\\r\\n\"\n",
        "request += b'User-Agent: '+ b\"Colab{Supatra}\" + b\"\\r\\n\"\n",
        "request += b'Content-Type: '+ b'text/plain; charset=utf-8' + b\"\\r\\n\"\n",
        "request += b'Connection: close\\r\\n'\n",
        "request += b'\\r\\n'\n",
        "\n",
        "print(request.decode())\n",
        "\n",
        "#ส่ง Request line ไปที่ Server\n",
        "s.sendall(request)\n",
        "\n",
        "#รับ Response จาก Server โดยตั้ง Buffer ไว้ที่  1024 Bytes (1 KBs)\n",
        "answer = s.recv(1024)\n",
        "\n",
        "#แสดงผล Response\n",
        "print(answer.decode())\n",
        "\n",
        "#ปิดการเชื่อมต่อ\n",
        "s.close()"
      ],
      "metadata": {
        "id": "L5-XsO-dC_ye",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "42907da6-83f8-41eb-fa03-a64f9c4b1fba"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "PATCH /api/w4/patch HTTP/1.1\r\n",
            "Host: cn351.cdoam.org\r\n",
            "User-Agent: Colab{Supatra}\r\n",
            "Content-Type: text/plain; charset=utf-8\r\n",
            "Connection: close\r\n",
            "\r\n",
            "\n",
            "HTTP/1.1 204 No Content\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 13:35:04 GMT\r\n",
            "Connection: close\r\n",
            "X-Powered-By: Express\r\n",
            "Access-Control-Allow-Origin: *\r\n",
            "ETag: W/\"6e-MiQdXi93PdHWcogWL9Doz03U0/8\"\r\n",
            "\r\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 6) ให้นักศึกษาทำการส่ง HTTP PATCH โดยใช้ Python Socket (`2 points`) \n",
        " ตามรายละเอียดดังต่อไปนี้\n",
        "  *   ให้นักศึกษาทำการส่ง HTTP PATCH Request ไปที่ cn351.cdoam.org\n",
        "  *   ให้ทำการระบุ location ไปที่ /api/w4/patch\n",
        "  *   เพิ่ม Header ชื่อ User-Agent โดยมีค่าว่า \"Colab {ชื่อภาษาอังกฤษของนักศึกษา}\"\n",
        "  *   เพิ่ม Header Content-Type โดยระบุเป็น text/plain\n",
        "  *   ทำการใส่ Body เป็น text คำว่า \"สวัสดี Server, ฉันชื่อ {ชื่อ-นามสกุลภาษาอังกฤษของนักศึกษา}\"\n",
        "  *   *นักศึกษาต้องทำการใส่ Header Content-Length ให้ request ด้วยโดยค่าของ Content-Length คือจำนวน byte ของ body ที่นักศึกษาส่งไปกับ request "
      ],
      "metadata": {
        "id": "uwROqOcTETPs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "HOST = b'cn351.cdoam.org'\n",
        "PORT = 80\n",
        "\n",
        "s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n",
        "s.connect((HOST, PORT))\n",
        "\n",
        "body = \"สวัสดี Server, ฉันชื่อ Supatra Pinjinda\"\n",
        "bodyEncode = body.encode('utf-8')\n",
        "bodyLen = len(bodyEncode)\n",
        "bodyLenEn = str(bodyLen).encode()\n",
        "\n",
        "request = b'PATCH /api/w4/patch HTTP/1.1\\r\\n'\n",
        "request += b'Host: ' + HOST + b\"\\r\\n\"\n",
        "request += b'User-Agent: '+ b\"Colab{Supatra}\" + b\"\\r\\n\"\n",
        "request += b'Content-Type: '+ b'text/plain; charset=utf-8' + b\"\\r\\n\"\n",
        "request += b'Content-Length: '+ bodyLenEn + b\"\\r\\n\"\n",
        "request += b'Connection: close\\r\\n\\r\\n'\n",
        "request += bodyEncode + b\"\\r\\n\"\n",
        "request += b'\\r\\n'\n",
        "\n",
        "print(request.decode())\n",
        "\n",
        "#ส่ง Request line ไปที่ Server\n",
        "s.sendall(request)\n",
        "\n",
        "#รับ Response จาก Server โดยตั้ง Buffer ไว้ที่  1024 Bytes (1 KBs)\n",
        "answer = s.recv(1024)\n",
        "\n",
        "#แสดงผล Response\n",
        "print(answer.decode())\n",
        "\n",
        "#ปิดการเชื่อมต่อ\n",
        "s.close()"
      ],
      "metadata": {
        "id": "dmRKHSM-ERGc",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "0413b3f6-dfa2-4501-b822-fb21e2c7d8b3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "PATCH /api/w4/patch HTTP/1.1\r\n",
            "Host: cn351.cdoam.org\r\n",
            "User-Agent: Colab{Supatra}\r\n",
            "Content-Type: text/plain; charset=utf-8\r\n",
            "Content-Length: 65\r\n",
            "Connection: close\r\n",
            "\r\n",
            "สวัสดี Server, ฉันชื่อ Supatra Pinjinda\r\n",
            "\r\n",
            "\n",
            "HTTP/1.1 200 OK\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 13:35:12 GMT\r\n",
            "Content-Type: text/html; charset=utf-8\r\n",
            "Content-Length: 160\r\n",
            "Connection: close\r\n",
            "X-Powered-By: Express\r\n",
            "Access-Control-Allow-Origin: *\r\n",
            "ETag: W/\"a0-abORIyBwiJMexw2TBxfKbn+HMm8\"\r\n",
            "\r\n",
            "You send PATCH Request!\n",
            "Server:Hello Student Your request send from Colab{Supatra} !\r\n",
            "Student:สวัสดี Server, ฉันชื่อ Supatra Pinjinda\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 7) ให้นักศึกษาทำการส่ง HTTP DELETE โดยใช้ Python Socket (`2 points`) \n",
        "ตามรายละเอียดดังต่อไปนี้"
      ],
      "metadata": {
        "id": "JjtO95_oFc_l"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 7.1 HTTP DELETE Type 1\n",
        "  *   ให้นักศึกษาทำการส่ง HTTP DELETE Request ไปที่ cn351.cdoam.org\n",
        "  *   ให้ทำการระบุ location ไปที่ /api/w4/user/{รหัสนักศึกษา}\n",
        "  *   เพิ่ม Header ชื่อ User-Agent โดยมีค่าว่า \"Colab {ชื่อภาษาอังกฤษของนักศึกษา}\""
      ],
      "metadata": {
        "id": "-ONUHCM5GWoN"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "HOST = b'cn351.cdoam.org'\n",
        "PORT = 80\n",
        "\n",
        "s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n",
        "s.connect((HOST, PORT))\n",
        "\n",
        "request = b'DELETE /api/w4/user/6310742801 HTTP/1.1\\r\\n'\n",
        "request += b'Host: ' + HOST + b\"\\r\\n\"\n",
        "request += b'User-Agent: '+ b\"Colab{Supatra}\" + b\"\\r\\n\"\n",
        "request += b'Connection: Keep-Alive\\r\\n\\r\\n'\n",
        "request += b'\\r\\n'\n",
        "\n",
        "print(request.decode())\n",
        "\n",
        "#ส่ง Request line ไปที่ Server\n",
        "s.sendall(request)\n",
        "\n",
        "#รับ Response จาก Server โดยตั้ง Buffer ไว้ที่  1024 Bytes (1 KBs)\n",
        "answer = s.recv(1024)\n",
        "\n",
        "#แสดงผล Response\n",
        "print(answer.decode())\n",
        "\n",
        "#ปิดการเชื่อมต่อ\n",
        "s.close()"
      ],
      "metadata": {
        "id": "ngm0zIYrGWRB",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c6789ece-d20f-4164-fa82-2cc3c8b3dc5b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "DELETE /api/w4/user/6310742801 HTTP/1.1\r\n",
            "Host: cn351.cdoam.org\r\n",
            "User-Agent: Colab{Supatra}\r\n",
            "Connection: Keep-Alive\r\n",
            "\r\n",
            "\r\n",
            "\n",
            "HTTP/1.1 401 Unauthorized\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 13:37:42 GMT\r\n",
            "Content-Type: text/html; charset=utf-8\r\n",
            "Content-Length: 91\r\n",
            "Connection: keep-alive\r\n",
            "X-Powered-By: Express\r\n",
            "Access-Control-Allow-Origin: *\r\n",
            "ETag: W/\"5b-4mkpLRLD3RYXPGz232c9stKwdbg\"\r\n",
            "\r\n",
            "Your not Authenticated! Please send request again with header \"Authorization\" with any keys\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### 7.2 HTTP DELETE Type 2\n",
        "  *   ให้นักศึกษาทำการส่ง HTTP DELETE ในข้อ 7.1 ไปใหม่โดยทำการแก้ไข Error ตาม Response ที่ได้รับจากข้อ 7.1"
      ],
      "metadata": {
        "id": "hIa91Ps1GbbO"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "HOST = b'cn351.cdoam.org'\n",
        "PORT = 80\n",
        "\n",
        "s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n",
        "s.connect((HOST, PORT))\n",
        "\n",
        "request = b'DELETE /api/w4/user/6310742801 HTTP/1.1\\r\\n'\n",
        "request += b'Host: ' + HOST + b\"\\r\\n\"\n",
        "request += b'User-Agent: '+ b\"Colab{Supatra}\" + b\"\\r\\n\"\n",
        "request += b'Authorization: ' + b'BASIC 5b-4mkpLRLD3RYXPGz232c9stKwdbg' + b'\\r\\n'\n",
        "request += b'Connection: Keep-Alive\\r\\n\\r\\n'\n",
        "request += b'\\r\\n'\n",
        "\n",
        "print(request.decode())\n",
        "\n",
        "#ส่ง Request line ไปที่ Server\n",
        "s.sendall(request)\n",
        "\n",
        "#รับ Response จาก Server โดยตั้ง Buffer ไว้ที่  1024 Bytes (1 KBs)\n",
        "answer = s.recv(1024)\n",
        "\n",
        "#แสดงผล Response\n",
        "print(answer.decode())\n",
        "\n",
        "#ปิดการเชื่อมต่อ\n",
        "s.close()"
      ],
      "metadata": {
        "id": "M4lzwxjuGqQw",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "7901ad19-c3b0-4312-85ca-6c5f9d00fd1b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "DELETE /api/w4/user/6310742801 HTTP/1.1\r\n",
            "Host: cn351.cdoam.org\r\n",
            "User-Agent: Colab{Supatra}\r\n",
            "Authorization: BASIC 5b-4mkpLRLD3RYXPGz232c9stKwdbg\r\n",
            "Connection: Keep-Alive\r\n",
            "\r\n",
            "\r\n",
            "\n",
            "HTTP/1.1 202 Accepted\r\n",
            "Server: nginx/1.18.0\r\n",
            "Date: Tue, 07 Feb 2023 13:48:16 GMT\r\n",
            "Content-Type: text/html; charset=utf-8\r\n",
            "Content-Length: 80\r\n",
            "Connection: keep-alive\r\n",
            "X-Powered-By: Express\r\n",
            "Access-Control-Allow-Origin: *\r\n",
            "ETag: W/\"50-DccT3rtNv2h/oRVxdvX9yMvdPA4\"\r\n",
            "\r\n",
            "Authen with key:BASIC 5b-4mkpLRLD3RYXPGz232c9stKwdbg ,Deleted student 6310742801\n"
          ]
        }
      ]
    }
  ]
}